### Generic preamble
Sys.setenv(LANG = "en") # For english language
options(scipen = 5) # To deactivate annoying scientific number notation
set.seed(1337) # To have a seed defined for reproducability
### Knitr options
if (!require("knitr")) install.packages("knitr"); library(knitr) # For display of the markdown
knitr::opts_chunk$set(warning=FALSE,
message=FALSE,
fig.align="center"
)
### Install packages if necessary
if (!require("pacman")) install.packages("pacman") # package for loading and checking packages :)
pacman::p_load(tidyverse, magrittr,
tidygraph, # For tidy-style graph manipulation
ggraph # For ggplot2 style graph plotting
)
install.packages("tikz")
install.packages("pgfplots")
install.packages("revealjs")
edge_list <- tibble(from = c(1, 2, 2, 3, 4), to = c(2, 3, 4, 2, 1))
edge_list
edge_list <- tibble(from = c(1, 2, 2, 3, 4), to = c(2, 3, 4, 2, 1))
edge_list
adj_matrix <- table(edge_list) %>% as.matrix()
adj_matrix
library(Matrix)
library(Matrix)
sparse_matrix <- table(edge_list) %>% Matrix(regMat, sparse = TRUE)
sparse_matrix
library(Matrix)
sparse_matrix <- table(edge_list) %>% Matrix(sparse = TRUE)
sparse_matrix
adj_matrix <- edge_list %>%
table() %>%
as.matrix()
adj_matrix
sparse_matrix %>% str()
library(Matrix)
sparse_matrix <- edge_list %>%
Matrix(sparse = TRUE) %>%
crossprod() %>%
sparse_matrix
node_list <- tibble(id = 1:4,
name = c("Jesper", "Pernille", "Jacob", "Dorte"),
group = c("A", "B", "B", "A"))
node_list
node_list <- tibble(id = 1:4,
name = c("Jesper", "Pernille", "Jacob", "Dorte"),
gender = c("M", "F", "M", "F"),
group = c("A", "B", "B", "A"))
node_list
library(igraph)
g <- graph_from_data_frame(d = edge_list, vertices = node_list, directed = FALSE)
g
node_list <- tibble(id = 1:4,
name = c("Jesper", "Pernille", "Jacob", "Dorte"),
gender = c("M", "F", "M", "F"),
group = c("A", "B", "B", "A"))
node_list
library(igraph)
g <- graph_from_data_frame(d = edge_list, vertices = node_list, directed = FALSE)
g
node_list
edge_list
library(igraph)
g <- graph_from_data_frame(d = edge_list, vertices = node_list, directed = FALSE)
g
glimpse(g[[1]])
g %>% str()
g %>% str()
edge_list <- tibble(from = c(1, 2, 2, 1, 4),
to = c(2, 3, 4, 2, 1))
edge_list
node_list <- tibble(id = 1:4,
name = c("Jesper", "Pernille", "Jacob", "Dorte"),
gender = c("M", "F", "M", "F"),
group = c("A", "B", "B", "A"))
node_list
node_list <- tibble(id = 1:5,
name = c("Jesper", "Pernille", "Jacob", "Dorte", "Donald"),
gender = c("M", "F", "M", "F"),
group = c("A", "B", "B", "A"))
node_list <- tibble(id = 1:5,
name = c("Jesper", "Pernille", "Jacob", "Dorte", "Donald"),
gender = c("M", "F", "M", "F", "M"),
group = c("A", "B", "B", "A", "C"))
node_list
library(igraph)
g <- graph_from_data_frame(d = edge_list, vertices = node_list, directed = FALSE)
g
edge_list <- tibble(from = c(1, 2, 2, 1, 4),
to = c(2, 3, 4, 5, 1))
edge_list
library(igraph)
g <- graph_from_data_frame(d = edge_list, vertices = node_list, directed = FALSE)
g
g %>% str()
plot(g)
g <- graph_from_adjacency_matrix(adj_matrix, mode = "undirected")
g
?graph_from_adjacency_matrix
plot(g)
library(igraph)
g <- graph_from_data_frame(d = edge_list, vertices = node_list, directed = FALSE)
# g <- graph_from_adjacency_matrix(adj_matrix, mode = "undirected") # Same for the adjacency matrix
g
g %>% str()
plot(g)
V(g)
E(g)
V(g)[1:3]
E(g)[2:4]
V(g)[[1:3]]
V(g)$name
V(g)
E(g)
